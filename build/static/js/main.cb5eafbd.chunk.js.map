{"version":3,"sources":["components/common/Loading.js","assets/img/headerLogo.png","components/common/Header.js","appConfig.js","components/Dashboard/MessageBox.js","components/Dashboard/StudentEmailForm.js","components/Dashboard/Milestone.js","components/Dashboard/StudentInfo.js","components/Dashboard/ProgressCard.js","components/Dashboard/Dashboard.js","components/common/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","props","AnimatePresence","StyledLoadingContainer","initial","opacity","translateX","animate","exit","src","alt","styled","motion","div","Header","showLeaderboard","setShowLeaderboard","StyledHeader","HeaderLogo","className","MessageBox","message","StyledMessageDialogueBox","translateY","style","backgroundColor","isError","border","msg","StudentEmailForm","handleUserEmailFormSubmit","setUserEmail","form","onChange","e","target","value","onSubmit","type","placeholder","required","onClick","Milestone","milestoneData","milestoneTitle","hasMilestoneUnlocked","boxShadow","milestoneColor","p","transition","delay","completedText","width","milestoneProgressPercentage","stiffness","damping","milestoneCompletedQuestBadges","maxQuestBadges","marginLeft","milestoneCompletedSkillBadges","maxSkillBadges","StudentInfo","studentData","StyledStudentInfo","Date","toLocaleString","ProgressCard","userStudentDetails","completedQuestBadges","parseInt","completedSkillBadges","clamp","val","min","max","milestones","toFixed","StyledProgressCard","map","milestone","id","Dashboard","studentsData","setIsLoading","useState","userEmail","showProgressCard","setShowProgressCard","setMessage","setUserStudentDetails","StyledDash","preventDefault","data","foundStudent","find","student","footer","StyledFooter","href","App","isLoading","setStudentsData","useEffect","Papa","parse","download","header","complete","results","sort","student1","student2","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb5eafbd.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { motion, AnimatePresence} from 'framer-motion'\r\nfunction Loading(props) {\r\n    return (\r\n        <AnimatePresence>\r\n            <StyledLoadingContainer\r\n                initial={{opacity: 0, translateX: \"-50%\"}}\r\n                animate={{opacity: 1, translateX: \"-50%\"}}\r\n                exit={{opacity: 0, translateX: \"-50%\"}}\r\n            >\r\n                <img src=\"loading.svg\" alt=\"\"/>\r\n                <p>Loading....</p> \r\n            </StyledLoadingContainer>\r\n        </AnimatePresence>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n\r\nlet StyledLoadingContainer = styled(motion.div)`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%,50%);\r\n    background-color: white;\r\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.193);\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    border-radius: 5px;\r\n    img{\r\n        width: 35px;\r\n        margin-right: 10px;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/headerLogo.9ea07d2f.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport HeaderLogo from '../../assets/img/headerLogo.png'\r\nimport { facilitatorInstituionName, facilitatorLastUpdated } from '../../appConfig'\r\n\r\n\r\nfunction Header({ showLeaderboard, setShowLeaderboard }) {\r\n    return (\r\n        <StyledHeader>\r\n            <img src={HeaderLogo} alt=\"\" />\r\n            <h1>Student Dashboard</h1>\r\n            <div className=\"header-info-container\">\r\n                <p className=\"facilitator-last-updated\">Last Updated: {facilitatorLastUpdated}</p>\r\n                <p className=\"facilitator-institution-name\">{facilitatorInstituionName}</p>\r\n            </div>\r\n        </StyledHeader>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\nlet StyledHeader = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin: 20px 0 auto auto;\r\n    /* width: 100vw; */\r\n    box-sizing: border-box;\r\n    h1{\r\n        text-transform: uppercase;\r\n        font-size: 25px;\r\n        color: #EA4335;\r\n        text-align: center;\r\n    }\r\n    img{\r\n        max-width: 300px;\r\n    }\r\n    .header-info-container{\r\n        display: flex;\r\n        align-items: center;\r\n        background-color: white;\r\n        box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\r\n        border-radius: 60px;\r\n        padding: 7px 17px;\r\n        .facilitator-last-updated{\r\n            box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\r\n            border-radius: 39px;\r\n            background: #34A853;\r\n            font-size: 12px;\r\n            padding: 5px 10px;\r\n            color: white;\r\n            margin: 0;\r\n            margin-right: 10px;\r\n            font-weight: 600;\r\n            white-space:  nowrap;\r\n        }\r\n        .facilitator-institution-name{\r\n            font-weight: 600;\r\n            margin: 0;\r\n            padding: 0;\r\n            font-size: 12px;\r\n        }\r\n    }\r\n    .tab-menu{\r\n        display: flex;\r\n        margin: 20px;\r\n        p{\r\n            padding: 15px 20px;\r\n            color: black;\r\n            text-transform: uppercase;\r\n            font-size: 15px;\r\n            margin: 10px;\r\n            padding: 0;\r\n            font-weight: 500;\r\n            cursor: pointer;\r\n            white-space: nowrap;\r\n        }\r\n        .tab-menu-active{\r\n            border-bottom: 2px solid black;\r\n        }\r\n    }\r\n    @media only screen and (max-width: 600px) {\r\n        h1{\r\n            font-size: 18px;\r\n        }\r\n        .header-info-container{\r\n            flex-direction: column;\r\n            padding: 10px!important;\r\n            border-radius: 5px;\r\n        }\r\n        .facilitator-institution-name{\r\n            margin-top: 10px!important;\r\n        }\r\n    }\r\n    @media only screen and (max-width: 350px) {\r\n        .tab-menu{\r\n            p{\r\n                font-size: 12px;\r\n            }\r\n        }\r\n    }\r\n`","// Each time you update change to the latest\r\n// date of updating. Also change your facilitator\r\n// instituion name. Change here will affect whole application.\r\n\r\nlet facilitatorInstituionName = \"Cochin University College Of Engineering Kuttanad\"\r\nlet facilitatorLastUpdated = \"8th MAY 2022\"\r\n\r\nexport { facilitatorInstituionName, facilitatorLastUpdated }","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nfunction MessageBox({message}) {\r\n    return (\r\n        <StyledMessageDialogueBox\r\n            initial={{ opacity: 0, translateY: 50 }}\r\n            animate={{ opacity: 1, translateY: 0 }}\r\n            exit={{ opacity: 0, translateY: 50 }}\r\n            style={{\r\n                backgroundColor: message.isError ? \"rgb(245 179 174)\" : \"rgb(190 247 205)\",\r\n                border: `solid 2px ${message.isError ? \"#EA4335\" : \"#34A853\"}`\r\n            }}\r\n        >\r\n            {message.msg}        \r\n        </StyledMessageDialogueBox>\r\n    );\r\n}\r\n\r\nexport default MessageBox;\r\n\r\nlet StyledMessageDialogueBox = styled(motion.div)`\r\n    width: 320px;\r\n    margin: 20px auto;\r\n    display: flex;\r\n    padding: 5px 10px;\r\n    color: black;\r\n    border-radius: 10px;\r\n    box-sizing: border-box;\r\n    font-size: 15px;\r\n    @media only screen and (max-width: 450px) {\r\n      width: 90%;\r\n      font-size: 13px;\r\n    }\r\n`","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nfunction StudentEmailForm({handleUserEmailFormSubmit,setUserEmail}) {\r\n    return (\r\n        <motion.form\r\n            initial={{ opacity: 0, translateY: 100 }}\r\n            animate={{ opacity: 1, translateY: 0 }}\r\n            exit={{ opacity: 0, translateX: -1000 }}\r\n            className=\"student-email-form\" \r\n            onChange={(e)=>{ setUserEmail(e.target.value) }}\r\n            onSubmit={handleUserEmailFormSubmit}\r\n        >\r\n            <input \r\n                className=\"student-email-input\"\r\n                type=\"email\"\r\n                placeholder=\"Type in your email.\"\r\n                required\r\n            />\r\n            <button\r\n                onClick={()=>{}}\r\n                className=\"student-form-submit-button\"\r\n                type=\"submit\"\r\n            >Check my progress</button>\r\n        </motion.form>\r\n    );\r\n}\r\n\r\nexport default StudentEmailForm;","import { motion } from 'framer-motion';\r\nimport React from 'react';\r\n\r\nfunction Milestone({milestoneData}) {\r\n    return (\r\n        <div \r\n            className=\"progress-item\"\r\n        >   \r\n            <p className=\"progress-title\">{`${milestoneData.milestoneTitle} ${milestoneData.hasMilestoneUnlocked ? '✅' : '🔒' }`}</p>\r\n            <div \r\n                className=\"progress-bar\"\r\n                style={{\r\n                    boxShadow: `0 0 0 2px ${milestoneData.milestoneColor} inset`\r\n                }}\r\n            >\r\n                <motion.p\r\n                    initial={{ translateX: 400 }}\r\n                    animate={{ translateX: 0}}\r\n                    transition={{ delay: 1.8 }}\r\n                >{milestoneData.hasMilestoneUnlocked ? milestoneData.completedText : ''}</motion.p>\r\n                <motion.div\r\n                    initial={{ width: 0 }}\r\n                    animate={{ width: `${milestoneData.milestoneProgressPercentage}%`}}\r\n                    transition={{ delay: 1, stiffness: 500 , damping: 300 }}\r\n                    className=\"progress-width\"\r\n                    style={{\r\n                        backgroundColor: `${milestoneData.milestoneColor}`\r\n                    }}\r\n                ></motion.div>\r\n            </div>\r\n            <div className=\"progress-info-container\">\r\n                <p className=\"progress-percentage\">{milestoneData.milestoneProgressPercentage}% completed</p>\r\n                <div className=\"progress-info\">\r\n                    <p>{milestoneData.milestoneCompletedQuestBadges}/{milestoneData.maxQuestBadges} QB</p>\r\n                    <p style={{ marginLeft: 5 }}>{milestoneData.milestoneCompletedSkillBadges}/{milestoneData.maxSkillBadges} SB</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Milestone;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction StudentInfo({studentData}) {\r\n    return (\r\n        <StyledStudentInfo>\r\n            <div\r\n                className=\"student-info-card\"\r\n                style={{ backgroundColor: studentData['Enrolment Status'] === \"All Good\" ? \"#34a853\" : '#EA4335'  }}\r\n            >\r\n                <p className=\"student-info-card-title\">Enrolment Status</p>\r\n                <p className=\"student-info-card-status\">{studentData['Enrolment Status']}</p>\r\n            </div>\r\n            <div className=\"student-info-card\">\r\n                <p className=\"student-info-card-title\"># of Quests Completed</p>\r\n                <p className=\"student-info-card-number-value\">{studentData['# of Quests Completed']}</p>\r\n            </div>\r\n            <div className=\"student-info-card\">\r\n                <p className=\"student-info-card-title\"># of Skill Badges Completed</p>\r\n                <p className=\"student-info-card-number-value\">{studentData['# of Skill Badges Completed']}</p>\r\n            </div>\r\n            <div className=\"student-info-card\">\r\n                <p className=\"student-info-card-title\">Enrolment Date & Time</p>\r\n                <p className=\"student-info-card-value\">{new Date(studentData['Enrolment Date & Time']).toLocaleString(\"en-US\")}</p>\r\n            </div>\r\n            <div className=\"student-info-card\">\r\n                <p className=\"student-info-card-title\">YOUR INSTITUTION</p>\r\n                <p className=\"student-info-card-value\">{studentData['Institution']}</p>\r\n            </div>\r\n        </StyledStudentInfo>\r\n    );\r\n}\r\n\r\nexport default StudentInfo;\r\n\r\nlet StyledStudentInfo = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    width: 95%;\r\n    margin: 10px auto;\r\n    .student-info-card{\r\n        background-color: #4285F4;\r\n        padding: 5px;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n        margin: 10px;\r\n        max-width: 200px;\r\n        .student-info-card-title{\r\n            font-style: normal;\r\n            font-weight: 500;\r\n            font-size: 12px;\r\n            line-height: 18px;\r\n            text-transform: uppercase;\r\n            color: #FFFFFF;\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n        .student-info-card-value{\r\n            font-style: normal;\r\n            font-weight: 600;\r\n            font-size: 13px;\r\n            text-transform: capitalize;\r\n            color: #FFFFFF;\r\n            margin: 0;\r\n            padding: 0;\r\n            margin-top: 10px;\r\n        }\r\n        .student-info-card-status{\r\n            font-style: normal;\r\n            font-weight: 600;\r\n            font-size: 15px;\r\n            text-transform: capitalize;\r\n            color: #FFFFFF;\r\n            margin: 0;\r\n            padding: 0;\r\n            margin-top: 10px;\r\n        }\r\n        .student-info-card-number-value{\r\n            font-style: normal;\r\n            font-weight: 800;\r\n            line-height: 13px;\r\n            text-transform: capitalize;\r\n            color: #FFFFFF;\r\n            font-size: 30px;\r\n            margin: 20px 0 10px 0;\r\n            padding: 0;\r\n        }\r\n    }\r\n    \r\n`","import { motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport Milestone from './Milestone';\r\nimport StudentInfo from './StudentInfo';\r\n\r\nfunction ProgressCard({userStudentDetails}) {\r\n    let completedQuestBadges = parseInt(userStudentDetails[\"# of Quests Completed\"])\r\n    let completedSkillBadges = parseInt(userStudentDetails[\"# of Skill Badges Completed\"])\r\n    let clamp = (val, min, max)  =>{\r\n        return val > max ? max : val < min ? min : val;\r\n    }\r\n    let milestones = [\r\n        {\r\n            milestoneTitle: \"Milestone #1 - Complete any 8 quests & 4 skill badges in the program\",\r\n            milestoneCompletedQuestBadges: completedQuestBadges < 8 ? completedQuestBadges : 8,\r\n            milestoneCompletedSkillBadges: completedSkillBadges < 4 ? completedSkillBadges : 4,\r\n            hasMilestoneUnlocked: completedQuestBadges >= 8 && completedSkillBadges >=4 ? true : false,\r\n            milestoneProgressPercentage: clamp(((completedQuestBadges/8)+(completedSkillBadges/4))*50,0,100).toFixed(2),\r\n            maxQuestBadges: 8,\r\n            maxSkillBadges: 4,\r\n            milestoneColor: \"#4285F4\",\r\n            completedText: \"WOHOOO! WAY TO GO BUDDY! 🎉\" \r\n        },\r\n        {\r\n            milestoneTitle: \"Milestone #2 - Complete any 16 quests & 8 skill badges in the program\",\r\n            milestoneCompletedQuestBadges: completedQuestBadges < 16 ? completedQuestBadges : 16,\r\n            milestoneCompletedSkillBadges: completedSkillBadges < 8 ? completedSkillBadges : 8,\r\n            hasMilestoneUnlocked: completedQuestBadges >= 16 && completedSkillBadges >=8 ? true : false,\r\n            milestoneProgressPercentage: clamp(((completedQuestBadges/16)+(completedSkillBadges/8))*50,0,100).toFixed(2),\r\n            maxQuestBadges: 16,\r\n            maxSkillBadges: 8,\r\n            milestoneColor: \"#FBBC05\",\r\n            completedText: \"Keep up the good work! 🔥\" \r\n        },\r\n        {\r\n            milestoneTitle: \"Milestone #3 - Complete any 24 quests & 12 skill badges in the program\",\r\n            milestoneCompletedQuestBadges: completedQuestBadges < 24 ? completedQuestBadges : 24,\r\n            milestoneCompletedSkillBadges: completedSkillBadges < 12 ? completedSkillBadges : 12,\r\n            hasMilestoneUnlocked: completedQuestBadges >= 24 && completedSkillBadges >=12 ? true : false,\r\n            milestoneProgressPercentage: clamp(((completedQuestBadges/24)+(completedSkillBadges/12))*50,0,100).toFixed(2),\r\n            maxQuestBadges: 24,\r\n            maxSkillBadges: 12,\r\n            milestoneColor: \"#34A853\",\r\n            completedText: \"You are awesome! 🤩🔥\" \r\n\r\n        },\r\n        {\r\n            milestoneTitle: \"Ultimate Milestone: Complete 30 Quests & all 15 Skill Badges\",\r\n            milestoneCompletedQuestBadges: completedQuestBadges < 30 ? completedQuestBadges : 30,\r\n            milestoneCompletedSkillBadges: completedSkillBadges < 15 ? completedSkillBadges : 15,\r\n            hasMilestoneUnlocked: completedQuestBadges >= 30 && completedSkillBadges >=15 ? true : false,\r\n            milestoneProgressPercentage: clamp(((completedQuestBadges/30)+(completedSkillBadges/15))*50,0,100).toFixed(2),\r\n            maxQuestBadges: 30,\r\n            maxSkillBadges: 15,\r\n            milestoneColor: \"#EA4335\",\r\n            completedText: \"Congrats! You totally rock! 💯\" \r\n\r\n        }\r\n    ]\r\n    return (\r\n        <StyledProgressCard\r\n            initial={{ opacity: 0, translateX: 2000 }}\r\n            animate={{ opacity: 1, translateX: 0 }}\r\n            exit={{ opacity: 0, translateX: -2000 }}\r\n            transition={{ delay: 0.5 }}\r\n        >\r\n            <h1 className=\"greet-student\">Welcome {userStudentDetails['Student Name']}!</h1>\r\n            <div className=\"progress-bars-container\">\r\n                {\r\n                    milestones.map((milestone,id) =>{\r\n                        return <Milestone \r\n                            key={id}\r\n                            milestoneData={milestone}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n            <StudentInfo studentData={userStudentDetails} />\r\n            <p className=\"quest-message\">Quest badges and Skill badges completed since your enrollment date will only be counted for progress. </p>\r\n        </StyledProgressCard>\r\n    );\r\n}\r\n\r\nexport default ProgressCard;\r\n\r\nlet StyledProgressCard = styled(motion.div)`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    background-color: white;\r\n    border: 2px solid black;\r\n    box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    .progress-bars-container{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        justify-content: center;\r\n    }\r\n    .greet-student{\r\n        font-size: 25px;\r\n        text-align: center;\r\n        margin: 0;\r\n        padding: 0;\r\n        margin-top: 10px;\r\n        font-weight: 400;\r\n        text-transform: capitalize;\r\n    }\r\n    .progress-item{\r\n        display: flex;\r\n        flex-direction: column;\r\n        width: 280px;\r\n        margin: 10px;\r\n        .progress-title{\r\n            font-style: normal;\r\n            font-weight: bold;\r\n            font-size: 10px;\r\n            line-height: 15px;\r\n            text-transform: uppercase;\r\n            color: #000000;\r\n        }\r\n        .progress-bar{\r\n            position: relative;\r\n            /* box-shadow: 0px 0px 0px 20px #4285F4 inset; */\r\n            border-radius: 40px;\r\n            overflow: hidden;\r\n            display: flex;\r\n            align-items: center;\r\n            padding: 5px 10px;\r\n            height: 30px;\r\n            box-sizing: border-box;\r\n            p{\r\n                z-index: 1;\r\n                font-weight: 500;\r\n                font-size: 12px;\r\n                line-height: 18px;\r\n                text-transform: uppercase;\r\n                color: #FFFFFF;\r\n                text-shadow: 0px 2px 3px rgba(0, 0, 0, 0.25);\r\n                margin: 0;\r\n                padding: 0;\r\n            }\r\n            .progress-width{\r\n                position: absolute;\r\n                left: 0;\r\n                top: 0;\r\n                height: 100%;\r\n            }\r\n        }\r\n        .progress-info-container{\r\n            margin-top: 5px;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            p{\r\n                font-style: normal;\r\n                font-weight: 500;\r\n                font-size: 12px;\r\n                line-height: 18px;\r\n                text-transform: uppercase;\r\n                color: #000000;\r\n                margin: 0;\r\n                padding: 0;\r\n            }\r\n            .progress-info{\r\n                display: flex;\r\n            }\r\n        }\r\n    }\r\n    .quest-message{\r\n        font-size: 10px;\r\n        text-align: center;\r\n    }\r\n    @media only screen and (max-width: 450px) {\r\n        .progress-item{\r\n            width: 90%;\r\n        }\r\n    }\r\n`","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AnimatePresence } from 'framer-motion'\r\nimport MessageBox from './MessageBox';\r\nimport StudentEmailForm from './StudentEmailForm';\r\nimport ProgressCard from './ProgressCard.js'\r\n// import Leaderboard from './Leaderboard';\r\n\r\nfunction Dashboard({ studentsData, setIsLoading, showLeaderboard }) {\r\n    let [userEmail, setUserEmail] = useState(null)\r\n    let [showProgressCard, setShowProgressCard] = useState(false)\r\n    let [message, setMessage] = useState(null)\r\n    let [userStudentDetails, setUserStudentDetails] = useState(null)\r\n    let handleUserEmailFormSubmit = (e) => {\r\n        setMessage(false)\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        if (studentsData?.data) {\r\n            let foundStudent = studentsData.data.find(student => {\r\n                return student[\"Student Email\"] === userEmail\r\n            })\r\n            if (foundStudent) {\r\n                setUserStudentDetails(foundStudent)\r\n                setIsLoading(false)\r\n                setShowProgressCard(true)\r\n            } else {\r\n                setIsLoading(false)\r\n                setMessage({\r\n                    msg: \"No Email address found. Please check your email. Use Email used in enrollment form.\",\r\n                    isError: true\r\n                })\r\n            }\r\n        } else {\r\n            setMessage({\r\n                msg: \"Some Error occured.\",\r\n                isError: true\r\n            })\r\n            setIsLoading(false)\r\n        }\r\n        // setShowProgressCard(true)\r\n    }\r\n    return (\r\n        <StyledDash>\r\n            <AnimatePresence>\r\n                {\r\n                    !showProgressCard && !showLeaderboard &&\r\n                    <StudentEmailForm\r\n                        handleUserEmailFormSubmit={handleUserEmailFormSubmit}\r\n                        setUserEmail={setUserEmail}\r\n                    />\r\n\r\n                }\r\n            </AnimatePresence>\r\n            <AnimatePresence>\r\n                {\r\n                    showProgressCard && !showLeaderboard &&\r\n                    <ProgressCard userStudentDetails={userStudentDetails} />\r\n                }\r\n            </AnimatePresence>\r\n            {/* <AnimatePresence>\r\n                {\r\n                    showLeaderboard &&\r\n                   // <Leaderboard studentsData={studentsData} />\r\n}\r\n            </AnimatePresence> */}\r\n            <AnimatePresence>\r\n                {\r\n                    message && <MessageBox message={message} />\r\n                }\r\n            </AnimatePresence>\r\n        </StyledDash>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\nlet StyledDash = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 30px;\r\n    padding-bottom: 10px;\r\n    /* margin-top: 20px; */\r\n    min-width: 400px;\r\n    max-width: 820px;\r\n    width: 70vw;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    box-sizing: border-box;\r\n    .student-email-form{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin-top: 0px;\r\n    }\r\n    .student-email-input{\r\n        background: #FFFFFF;\r\n        box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\r\n        border-radius: 39px;\r\n        border: none;\r\n        font-size: 18px;\r\n        padding: 10px 20px;\r\n        outline: none;\r\n        min-width: 300px;\r\n        width: 30vw;\r\n        text-align: center;   \r\n        transition: all 0.2s ease-in-out;\r\n        :focus{\r\n            box-shadow: 0px 4px 20px -3px rgba(255, 0, 0, 0.296);\r\n        }  \r\n    }\r\n    .student-form-submit-button{\r\n        background: #4285F4;\r\n        box-shadow: 0px 4px 15px -3px rgba(0, 0, 0, 0.29);\r\n        border-radius: 39px;\r\n        border: none;\r\n        margin-top: 20px;\r\n        margin-bottom: 20px;\r\n        font-size: 15px;\r\n        padding: 8px 15px;\r\n        font-weight: 500;\r\n        color: white;\r\n        outline: none;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease-in-out;\r\n        :hover{\r\n            box-shadow: 0px 4px 20px -3px rgb(0, 110, 255);\r\n            transform: scale(0.95)\r\n        }\r\n    }\r\n    @media only screen and (max-width: 700px) {\r\n        padding: 0px;\r\n        min-width: unset;\r\n        width: 90%;\r\n    }\r\n    @media only screen and (max-width: 450px) {\r\n        padding: 0px;\r\n        min-width: unset;\r\n        width: 90%;\r\n        .student-email-input{\r\n            width: 90%;\r\n            max-width: unset;\r\n            min-width: unset;\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nfunction footer(props) {\r\n    return (\r\n        <StyledFooter>\r\n            <p>Made for 2022 Google Cloud Ready Facilitators & Students with 💖 by team at <a href=\"https://cucek.cusat.ac.in/\">CUCEK.</a> </p>\r\n        </StyledFooter>\r\n    );\r\n}\r\n\r\nexport default footer;\r\n\r\nlet StyledFooter = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    margin: 40px auto;\r\n    padding: 10px; \r\n    box-sizing: border-box;\r\n    p{\r\n        text-align: center;\r\n        font-size: 11px;\r\n    }\r\n`","import './App.css';\r\nimport Papa from 'papaparse'\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport Loading from './components/common/Loading'\r\nimport Header from './components/common/Header'\r\nimport Dashboard from './components/Dashboard/Dashboard'\r\nimport Footer from './components/common/Footer'\r\n\r\nfunction App() {\r\n  let [isLoading,setIsLoading] = useState(true)\r\n  let [studentsData,setStudentsData] = useState([])\r\n  let [showLeaderboard,setShowLeaderboard] = useState(false)\r\n  useEffect(()=>{\r\n    setIsLoading(true)\r\n    Papa.parse(\"/studentData/data.csv\", {\r\n      download: true,\r\n      header: true,\r\n      complete: function(results) {\r\n        //Sorting based on the number of quest badges + skill badges  \r\n        results.data.sort((student1,student2)=>{\r\n          return (parseInt(student2[\"# of Quests Completed\"]+student2[\"# of Skill Badges Completed\"]))-parseInt((student1[\"# of Quests Completed\"]+student1[\"# of Skill Badges Completed\"]))\r\n        })\r\n        setStudentsData(results)\r\n        setIsLoading(false)\r\n      }\r\n    });\r\n  },[])\r\n  return (\r\n    <div className=\"page\">\r\n      { isLoading && <Loading />}\r\n      <Header \r\n        showLeaderboard={showLeaderboard}\r\n        setShowLeaderboard={setShowLeaderboard}\r\n      />\r\n      <Dashboard \r\n        showLeaderboard={showLeaderboard}\r\n        studentsData={studentsData}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}